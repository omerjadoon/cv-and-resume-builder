

20.120.14.135
20.163.145.103
20.115.104.183
omer
Ba...33

killall -9 node

sudo -u postgres psql

naturebreezeprotonmail.onmicrosoft.com

sudo nohup pnpm start &



For installation
sudo apt install nodejs
sudo apt install npm


For node lts
curl -fsSL https://deb.nodesource.com/setup_current.x | sudo -E bash -
sudo apt-get install -y nodejs


sudo apt update
sudo apt install postgresql postgresql-contrib
sudo systemctl start postgresql.service



:wq to exit terminal
vim .env
TZ=UTC
PUBLIC_URL=http://20.163.145.103:3000
PUBLIC_SERVER_URL=http://20.163.145.103:3100
PUBLIC_GOOGLE_CLIENT_ID=

# Server + Database
POSTGRES_DB=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=B..2

# Server
SECRET_KEY=hgf6586j6gy6Hjf7fJgfjhjh5
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_SSL_CERT=
JWT_SECRET=hgf6586j6gy6Hjf7fJgfjhjh5
JWT_EXPIRY_TIME=604800
GOOGLE_CLIENT_SECRET=
GOOGLE_API_KEY=
MAIL_FROM_NAME=
MAIL_FROM_EMAIL=
MAIL_HOST=









sudo apt-get update
sudo apt-get install postgresql postgresql-contrib
su - postgres


cat filename to display output
\password

sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg

NODE_MAJOR=20
echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list

sudo apt-get update
sudo apt-get install nodejs -y


sudo apk add --no-cache g++ git curl make python3 libc6-compat 
&& curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm




sudo apt install nginx

sudo nano /etc/systemd/system/cv.service


[Unit]
Description=Your Node.js App

[Service]
ExecStart=pnpm start
Restart=always
User=omer
Environment=NODE_ENV=production

[Install]
WantedBy=multi-user.target




sudo nano /etc/nginx/sites-available/cv





server {
    listen 80;
    server_name hiresafari.eastus.cloudapp.azure.com;

    location / {
        proxy_pass http://localhost:3000; # Forward requests to your Node.js app
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 80;
    server_name hiresafari.com;

    location / {
        proxy_pass http://localhost:3000; # Forward requests to your Node.js app
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}


server {
    listen 80;
    server_name www.hiresafari.com;

    location / {
        proxy_pass http://localhost:3000; # Forward requests to your Node.js app
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}



sudo ln -s /etc/nginx/sites-available/cv /etc/nginx/sites-enabled/




